#!/bin/bash
## Test your drive using fio. The output should be similar to CrystalDiskMark on Windows
## fio_like_crystaldiskmark
## by @makeme v.2024-12-27
if ! [ -x "$(command -v fio)" ]; then
  echo 'Please install fio' >&2
  exit 1
fi
filename=fiotest_
OPTIONS="--size=1G --ioengine=libaio --runtime=5 --direct=1 --randrepeat=0 --refill_buffers --end_fsync=1 --rwmixread=70 --zero_buffers=0"
## TESTS
SEQ1M_Q8T1_read ()
{
  fio --name=$filename$FUNCNAME --bs=1M --rw=read --max-jobs=1 --iodepth=8 $OPTIONS | grep READ | awk '{print $3}' | sed 's/(//;s/),//' && rm $filename*
}
SEQ1M_Q8T1_write ()
{
  fio --name=$filename$FUNCNAME --bs=1M --rw=write --max-jobs=1 --iodepth=8 $OPTIONS | grep WRITE | awk '{print $3}' | sed 's/(//;s/),//' && rm $filename*
}
SEQ1M_Q1T1_read ()
{
  fio --name=$filename$FUNCNAME --bs=1M --rw=read --max-jobs=1 --iodepth=1 $OPTIONS | grep READ | awk '{print $3}' | sed 's/(//;s/),//' && rm $filename*
}
SEQ1M_Q1T1_write ()
{
  fio --name=$filename$FUNCNAME --bs=1M --rw=write --max-jobs=1 --iodepth=1 $OPTIONS | grep WRITE | awk '{print $3}' | sed 's/(//;s/),//' && rm $filename*
}
RND4K_Q32T1_read ()
{
  fio --name=$filename$FUNCNAME --bs=4k --rw=randread --max-jobs=1 --iodepth=32 $OPTIONS | grep READ | awk '{print $3}' | sed 's/(//;s/),//' && rm $filename*
}
RND4K_Q32T1_write ()
{
  fio --name=$filename$FUNCNAME --bs=4k --rw=randwrite --max-jobs=1 --iodepth=32 $OPTIONS | grep WRITE | awk '{print $3}' | sed 's/(//;s/),//' && rm $filename*
}
RND4K_Q1T1_read ()
{
  fio --name=$filename$FUNCNAME --bs=4k --rw=randread --max-jobs=1 --iodepth=1 $OPTIONS | grep READ | awk '{print $3}' | sed 's/(//;s/),//' && rm $filename*
}
RND4K_Q1T1_write ()
{
  fio --name=$filename$FUNCNAME --bs=4k --rw=randwrite --max-jobs=1 --iodepth=1 $OPTIONS | grep WRITE | awk '{print $3}' | sed 's/(//;s/),//' && rm $filename*
}
## Little info before test
df -h .
echo
## Let's go
echo -e "Test_Name    READ   WRITE"
echo -e "SEQ1M_Q8T1  " $(SEQ1M_Q8T1_read) $(SEQ1M_Q8T1_write)
echo -e "SEQ1M_Q1T1  " $(SEQ1M_Q1T1_read) $(SEQ1M_Q1T1_write)
echo -e "RDN4K_Q32T1 " $(RND4K_Q32T1_read) $(RND4K_Q32T1_write)
echo -e "RDN4K_Q1T1  " $(RND4K_Q1T1_read) $(RND4K_Q1T1_write)
